

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  transactions Transaction[]
  budgets     Budget[]
  categories  Category[]
}

model Transaction {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  amount     Float
  name       String
  type       String    // "income" or "expense"
  date       String
  categoryId String?   @db.ObjectId
  userId     String    @db.ObjectId
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  userId       String        @db.ObjectId
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets      Budget[]
  @@unique([name, userId]) // Ensure unique category names per user
}

model Budget {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  amount     Float
  leftAmount Float
  startDate  String
  endDate    String
  categoryId String   @db.ObjectId
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}
